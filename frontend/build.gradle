plugins {
  id 'com.github.node-gradle.node' version '2.2.0'
}

description = 'frontend'

node {
  version = '12.13.0'
  download = true
  workDir = file("${project.projectDir}/node")
  nodeModulesDir = file("${project.projectDir}")
}

task ngBuild {
  dependsOn 'ngBuildTrollBuild'
  dependsOn 'ngBuildAdmin'
}

task ngBuildTrollBuild(type: NpmTask) {
  dependsOn npmInstall
  description = "Runs 'npm run build'"

  inputs.files(fileTree('node_modules'))
  inputs.files(fileTree('projects/troll-build/src'))
  inputs.file('projects/troll-build/tsconfig.app.json')
  inputs.file('projects/troll-build/tsconfig.json')
  inputs.file('angular.json')
  inputs.file('package.json')
  inputs.file('package-lock.json')
  inputs.file('tsconfig.json')

  outputs.dir('dist/troll-build')

  outputs.cacheIf { true }

  args = ['run', 'build']
}

task ngBuildAdmin(type: NpmTask) {
  dependsOn npmInstall
  description = "Runs 'npm run build-admin'"

  inputs.files(fileTree('node_modules'))
  inputs.files(fileTree('projects/admin/src'))
  inputs.file('projects/admin/tsconfig.app.json')
  inputs.file('projects/admin/tsconfig.json')
  inputs.file('angular.json')
  inputs.file('package.json')
  inputs.file('package-lock.json')
  inputs.file('tsconfig.json')

  outputs.dir('dist/admin')

  outputs.cacheIf { true }

  args = ['run', 'build-admin']
}

task karmaTests(type: NpmTask) {
  dependsOn npmInstall
  args = ['run', 'test-all-ci']
}

// Since Angular does not modify the deployUrl of html (like src), assets must be moved to the root of /dist to avoid 404's
task moveAssets() {
  dependsOn 'ngBuild'
  doLast {
    ant.move file: "${projectDir}/dist/troll-build/assets", todir: "${projectDir}/dist"
    ant.move file: "${projectDir}/dist/admin/assets", todir: "${projectDir}/dist"
  }
}
