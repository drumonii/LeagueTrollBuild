plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'java'
}

version = "${buildVersion}"

description = 'backend'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    dependsOn ':frontend:karmaTests'
}

task apiDocTest(type: Test) {
    useJUnitPlatform {
        includeTags 'api-doc'
    }
    outputs.dir snippetsDir
}

asciidoctor {
    dependsOn apiDocTest
    sourceDir 'src/main/doc'
    attributes 'snippets': snippetsDir, 'version': version
    inputs.dir snippetsDir
}

bootJar {
    archiveFileName = "${rootProject.name}.jar"
    destinationDirectory = file("${rootProject.rootDir}/build")
    dependsOn asciidoctor
    dependsOn ':frontend:ngBuild', ':frontend:moveAssets'
    from (asciidoctor.outputDir) {
        into 'static/docs'
    }
    from ("${project(':frontend').projectDir}/dist") {
        into 'public'
    }
    manifest {
        attributes('Implementation-Version': archiveVersion, 'Build-Date': new Date(), 'Created-By': "Gradle ${gradle.gradleVersion}")
    }
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Spring Batch integration
    implementation 'org.springframework.batch:spring-batch-integration'

    // H2
    runtimeOnly 'com.h2database:h2'

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Jaxb
    implementation 'javax.xml.bind:jaxb-api'

    // EhCache
    implementation 'net.sf.ehcache:ehcache'

    // Flyway
    implementation 'org.flywaydb:flyway-core'

    // Apache Commons
    implementation 'org.apache.commons:commons-collections4:4.4'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.batch:spring-batch-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
    testImplementation 'com.squareup.okhttp3:okhttp:4.9.3'
}

task stage {
    dependsOn build
}
