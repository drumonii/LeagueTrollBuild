plugins {
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.6'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = '2.5.0'

sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    dependsOn test
    sourceDir 'src/main/doc'
    attributes 'snippets': snippetsDir, 'version': version
    inputs.dir snippetsDir
}

bootJar {
    baseName "${rootProject.name}"
    dependsOn asciidoctor
    dependsOn ':frontend:npmBuild'
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    from("${project(':frontend').projectDir}/dist") {
        into 'public'
    }
    manifest {
        attributes('Implementation-Version': version, 'Build-Date': new Date(), 'Created-By': "Gradle ${gradle.gradleVersion}")
    }
}

repositories {
    jcenter()
}

dependencies {
    // Spring Boot Starters
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-batch'
    compile 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'

    // H2
    runtime 'com.h2database:h2'

    // PostgreSQL
    runtime 'org.postgresql:postgresql'

    // Jaxb
    compile 'javax.xml.bind:jaxb-api'

    // EhCache
    compile 'net.sf.ehcache:ehcache'

    // Flyway
    compile 'org.flywaydb:flyway-core'

    // Apache Commons
    compile 'org.apache.commons:commons-collections4:4.2'

    // Testing
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
    testCompile('org.springframework.batch:spring-batch-test') {
        exclude group: 'commons-io'
        exclude group: 'commons-collections'
    }
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

task stage {
    dependsOn build
}
